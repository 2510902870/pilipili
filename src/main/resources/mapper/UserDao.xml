<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--其中namespace是命名空间，通过命名空间去寻找对应的sql标签
必须要唯一，定位到dao层的接口上-->
<mapper namespace="com.pilipili.dao.UserDao">
<!--    <select id="selectUserById" resultType="user">-->
<!--        select * from p_user where id=#{user_id}-->
<!--    </select>-->
    <select id="selectUserByAccountAndPwd" resultType="user">
        select id, account, password, gender, age, tel, portraitUrl from p_user where account=#{account} and password=#{password}
    </select>
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into p_user(account, password, gender, age, tel, portraitUrl) values(#{account}, #{password}, #{gender}, #{age}, #{tel}, #{portraitUrl})
    </insert>
    <update id="updateUserByAccount" parameterType="user">
        update p_user set password=#{user.password}, gender=#{user.gender}, age=#{user.age}, tel=#{user.tel}, portraitUrl=#{user.portraitUrl} where account=#{user.account}
    </update>
    <select id="selectUserByAccount" resultType="user">
        select id, account, password, gender, age, tel, portraitUrl from p_user where account=#{account}
    </select>
    <insert id="insertVideo" useGeneratedKeys="true" keyProperty="id">
        insert
        into p_video(`name`, `desc`, releaseDate, clickTimes, pictureUrls, videoUrl, state, user_id, category_id, video_length, file_name)
        values(#{video.name}, #{video.desc}, now(), #{video.clickTimes}, #{video.pictureUrls}, #{video.videoUrl}, #{video.state}, #{user_id}, #{category_id}, #{video.video_length}, #{video.fileName})
    </insert>
    <insert id="insertUserLike" useGeneratedKeys="true" keyProperty="id">
        insert into user_likes(`date`, state, user_id, video_id) values(now(), 1, #{user_id}, #{video_id})
    </insert>
    <update id="updateUserLike">
        update user_likes set state=#{state} where user_id=#{user_id} and video_id=#{video_id}
    </update>
    <insert id="insertUserCollection" useGeneratedKeys="true" keyProperty="id">
        insert into user_collection(`date`, state, user_id, video_id) values(now(), 1, #{user_id}, #{video_id})
    </insert>
    <update id="updateUserCollection">
        update user_collection set state=#{state} where user_id=#{user_id} and video_id=#{video_id}
    </update>
    <insert id="insertComment" useGeneratedKeys="true" keyProperty="id">
        insert into user_comments(user_id, video_id, comment_date, comment, parent_id) values(#{user_id}, #{video_id}, now(), #{comment}, null)
    </insert>
    <insert id="addComment" useGeneratedKeys="true" keyProperty="id">
        insert into user_comments(user_id, video_id, comment_date, comment, parent_id) values(#{user_id}, #{video_id}, now(), #{comment}, #{parent_id})
    </insert>

    <select id="selectLikeStateByUidAndVid" resultType="Integer" parameterType="Integer">
        select state
        from user_likes
        where user_id = #{user_id} and video_id = #{video_id}
    </select>

    <select id="selectCollectionStateByUidAndVid" parameterType="Integer" resultType="Integer">
        select state
        from user_collection
        where user_id = #{user_id} and video_id = #{video_id}
    </select>

    <select id="selectUserById" resultType="user" parameterType="Integer">
        select id, account, password, gender, age, tel, portraitUrl
        from p_user
        where id = #{user_id}
    </select>


    <insert id="insertVideoUpload" useGeneratedKeys="true" keyProperty="id">
        insert into video_upload(user_id, video_id, upload_date) values(#{videoUpload.user.id}, #{videoUpload.video.id}, #{videoUpload.uploadDate})
    </insert>

    <update id="updateUserById" parameterType="user">
        update p_user set account=#{user.account}, password=#{user.password}, gender=#{user.gender}, age=#{user.age}, tel=#{user.tel}, portraitUrl=#{user.portraitUrl} where id=#{id}
    </update>

</mapper>